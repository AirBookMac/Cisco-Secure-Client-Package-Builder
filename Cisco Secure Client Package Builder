#!/bin/bash

#Cisco Secure Client Package Builder 2.1
#Hypoport hub SE -=- Mirko Steinbrecher
#Created on 22.05.2024

#This script builds an Cisco Secure Client Package. You need the newest .dmg from IT-Sec

#Givenname from the logged in user
loggedInUser=$( echo "show State:/Users/ConsoleUser" | scutil | awk '/LongUserNameKey :/ { print $4 }' )

#SwiftDialog Path
dialogApp="/usr/local/bin/dialog"

#Swift variables
title="Version query"
message="Hello $loggedInUser,
\n please enter the version number of the Cisco Secure Client to be packaged."
icon="/Library/Application Support/Hypoport hub SE/hhuh.png"

#Main dialog
  dialogCMD="$dialogApp -p --title \"$title\" \
  --icon \"$icon\" \
  --message \"$message\" \
  --button1text "Packaging" \
	--button2text "Cancel" \
  --moveable \
	--ontop \
	--small \
  --textfield \"Version Number",prompt="e.g. 5.1.3.62",required,regex="([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)",regexerror="Version number must be a number with four blocks.\""

  input_version=$(eval "$dialogCMD" | awk -F " : " '{print $NF}')


returncode=$?

case ${returncode} in
  0) echo "Pressed Button 1"
  ## Process exit code 0 scenario here
  ;;

  2) echo "Pressed Button 2"
  ## Process exit code 0 scenario here
  ;;

  3) echo "Pressed Button 3"
  ## Process exit code 0 scenario here
  ;;

  *) echo "Something else happened. exit code ${returncode}"
  ## Catch all processing
  ;;
esac

#make sure script exists cleanly otherwise Self Service will complain if it's anything other than 0
#exit 0


#Find the current user
currentuser=$( scutil <<< "show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ { print $3 }' )
echo $currentuser


#Givenname from the logged in user
loggedInUser=$( echo "show State:/Users/ConsoleUser" | scutil | awk '/LongUserNameKey :/ { print $4 }' )

#Variables
dmg_path="/Users/$currentuser/Downloads/cisco-secure-client-macos-$input_version-predeploy-k9.dmg"
pkg_name="Cisco\ Secure\ Client.pkg"
image_name="Cisco\ Secure\ Client\ $version_number"
extract_path="/private/var/tmp/SecureClient"

#Check if previous extract_path exists
if [ -d "/private/var/tmp/SecureClient" ]; then
  echo "Existing extract_path found: /private/var/tmp/SecureClient. Delete the folder."
  rm -f -R /private/var/tmp/SecureClient
fi

#Create SecureClient Folder
sudo -u $currentuser mkdir /private/var/tmp/SecureClient

#Extract versionnumber
regex="([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)"

if [[ $dmg_path =~ $regex ]]; then
    version_number="${BASH_REMATCH[1]}"
    echo "The version number is: $version_number"
else
    echo "The version number could not be found."
fi


#Check if the DMG file exists
if [ ! -f "$dmg_path" ]; then
    echo "DMG not found: $dmg_path"
    exit 1
fi


#Mount DMG
echo "Mount DMG..."
hdiutil attach "$dmg_path" >/dev/null


#Search for the .pkg package in the mounted image
pkg_path=$(find /Volumes -iname "$pkg_name" -type f)


#Check if the package was found
if [ -z "$pkg_path" ]; then
    echo "Package '$pkg_name' not found in DMG image."
    exit 1
fi


#Extract the package to the specified folder
echo "Extract $pkg_name to $extract_path..."
sudo -u $currentuser cp -R "$pkg_path" "$extract_path"


#Unmount Image
echo "Unmount DMG..."
sudo -u $currentuser hdiutil detach "/Volumes/Cisco Secure Client $version_number"
echo "Extract completed: $pkg_name to $extract_path"


#Execute pkgutil expand
cd $extract_path
echo "Execute pkgutil expand"
sudo -u $currentuser pkgutil --expand $extract_path/Cisco\ Secure\ Client.pkg Installer
if [ -d $extract_path/Installer ]; then
    echo "Folder Installer is created."
else
    echo "Folder Installer IS NOT created."
fi


#Remove unnecessary components
sed -i '' '/<line choice="choice_thousandeyes"\/>/d' $extract_path/Installer/Distribution
sed -i '' '/<line choice="choice_duo"\/>/d' $extract_path/Installer/Distribution
sed -i '' '/<line choice="choice_zta"\/>/d' $extract_path/Installer/Distribution
sed -i '' '/<line choice="choice_secure_firewall_posture"\/>/d' $extract_path/Installer/Distribution
sed -i '' '/<line choice="choice_iseposture"\/>/d' $extract_path/Installer/Distribution
sed -i '' '/<line choice="choice_nvm"\/>/d' $extract_path/Installer/Distribution
sed -i '' '/<line choice="choice_fireamp"\/>/d' $extract_path/Installer/Distribution


#pkgutil
cd /private/var/tmp/SecureClient/
echo "Execute pkgutil flatten"
sudo -u $currentuser pkgutil --flatten Installer $extract_path/Cisco\ Systems\ Secure\ Client\ $version_number.pkg
echo "Package created"


#Open Folder
echo "Open Folder $extract_path"
open $extract_path


echo Exit 0
